package LRM

type GFDL_License {
  invariant_sections          String [0 .. *]
  front_cover        optional String
  back_cover         optional String
}

type Text {
  text    optional String
  bullets optional String [2 .. *]
}

type Grammar extends Text {
  bnf String
}

type Terminal extends Text {
  def      String
  examples String [1 .. *]
}

type Keywords extends Text {}

checks Keywords {
  bullets != null and len(bullets) >= 1,
    error "You need to give at least one keyword", bullets
}

type Punctuation extends Text {}

checks Punctuation {
  bullets != null and len(bullets) >= 1,
    fatal "You need to provide at least one token", bullets
  (forall item in bullets => "`" in item),
    error "You need to use `` to enclose punctuation tokens", bullets
}

enum Kind {
  Static
  Dynamic
}

type Semantics extends Text {
  kind Kind
}

type Recommendation extends Text {
}

type Example extends Text {
  rsl_content  optional String
  trcl_content optional String
  fragment optional String
}
